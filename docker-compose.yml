version: "3"

services:
  db:
    image: "postgres:15"
    env_file: .env.docker
    ports:
      - 5432:5432
    restart: unless-stopped
  
  authdb:
    image: "postgres:15"
    env_file: .env.supertokens
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "supertokens"]
      interval: 5s
      timeout: 5s
      retries: 5

  supertokens:
    image: registry.supertokens.io/supertokens/supertokens-postgresql
    depends_on:
      - authdb
    ports:
      - 3567:3567
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5
    env_file: .env.supertokens

  gateway:
    build:
      context: .
      dockerfile: Dockerfile.graphDev
    volumes:
      - ./packages:/app/packages
    entrypoint: sh migrate_launch_dev.sh
    depends_on:
      - db
      - redis
      - supertokens
      - backend-accounts-graph
      - backend-posts-graph
    ports:
      - 4000:4000
    env_file: .env.docker

  backend-accounts-graph:
    build:
      context: .
      dockerfile: Dockerfile.graphDev
    volumes:
      - ./packages:/app/packages
    entrypoint: yarn workspace backend-accounts-graph server-dev
    depends_on:
      - db
      - redis
      - supertokens
    ports:
      - 4001:4001
    env_file: .env.docker

  backend-posts-graph:
    build:
      context: .
      dockerfile: Dockerfile.graphDev
    volumes:
      - ./packages:/app/packages
    entrypoint: yarn workspace backend-posts-graph server-dev
    depends_on:
      - db
      - redis
      - supertokens
    ports:
      - 4002:4002
    env_file: .env.docker

  redis:
    image: redis
    restart: unless-stopped
    ports:
      - 6379:6379
    command: ["redis-server", "--appendonly", "no", "--maxmemory", "1024mb", "--maxmemory-policy", "allkeys-lru"]